import me.champeau.gradle.japicmp.JapicmpTask

configurations {
  baseline
  latest
}

dependencies {
  baseline('com.jakewharton.timber:timber') {
    transitive = false
    version {
      strictly('4.7.1')
    }
  }
  latest project(path: ':timber', configuration: 'releaseRuntimeElements')
}

def japicmp = tasks.register('japicmp', JapicmpTask) {
  oldClasspath.setFrom configurations.baseline.incoming.artifactView { config ->
    config.attributes { container ->
      container.attribute(Attribute.of("artifactType", String.class), "jar")
    }
  }.artifacts.artifactFiles

  newClasspath.setFrom configurations.latest.incoming.artifactView { config ->
    config.attributes { container ->
      container.attribute(Attribute.of("artifactType", String.class), "jar")
    }
  }.artifacts.artifactFiles

  onlyBinaryIncompatibleModified = true
  failOnModification = true
  txtOutputFile = file("$buildDir/reports/japi.txt")
  ignoreMissingClasses = true
  includeSynthetic = true
}

def check = tasks.register('check') {
  it.dependsOn(japicmp)
}

tasks.register('build') {
  it.dependsOn(check)
}
